name: Build and Publish Docker Image

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/docker-publish.yml'
      - 'ci/**'
      - 'docker/**'
      - 'tracker-profiles-screenshots/**'
      - '.gitignore'
      - 'pom.xml'
      - 'VERSION'
    paths-ignore:
      - 'ci/doc/**'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      has_changes: 'false'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for pushing tags

      - name: Configure git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Read current version
        id: version
        run: |
          version=$(cat VERSION)
          echo "Using version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      # Set up Java & Maven to execute tests
      - name: Cache local .m2
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.18.0
        with:
          checkout-fetch-depth: 0
          java-distribution: 'temurin'
          java-version: '23'
          maven-version: '3.9.9'

      - name: Set Maven version from VERSION file
        run: |
          mvn versions:set -DnewVersion=${{ steps.version.outputs.version }} -DgenerateBackupPoms=false -DprocessAllModules

      - name: Run lints and test with Maven (including SonarQube)
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONARQUBE_PAT: ${{ secrets.SONARQUBE_PAT }}
        run: mvn clean install -Dall -Dsonarqube

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=registry,ref=zodac/tracker-profiles:cache
          cache-to: type=registry,ref=zodac/tracker-profiles:cache,mode=max
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            zodac/tracker-profiles:${{ steps.version.outputs.version }}
            zodac/tracker-profiles:latest

      - name: Tag current version in git (only if Docker build succeeds)
        if: success()
        run: git tag ${{ steps.version.outputs.version }}

      - name: Bump patch version in VERSION file
        run: |
          current_version="${{ steps.version.outputs.version }}"
          IFS='.' read -r major minor patch <<< "$current_version"
          new_patch=$((patch + 1))
          next_version="$major.$minor.$new_patch"
          echo "Bumping version to $next_version"
          echo "$next_version" > VERSION
          
          # Set Maven project version to next development SNAPSHOT version
          mvn versions:set -DnewVersion="$next_version-SNAPSHOT" -DgenerateBackupPoms=false -DprocessAllModules

          # Push changes
          git add VERSION pom.xml */pom.xml

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "[CI] Prepare next version: $next_version"
            echo "has_changes=true" >> $GITHUB_ENV
          fi

      - name: Push commit and tag if there were changes
        if: env.has_changes == 'true'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          tags: "true"
